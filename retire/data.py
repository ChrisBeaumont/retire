from io import StringIO
from functools import lru_cache as cache

import pandas as pd

@cache
def actuarial_data():
    # https://www.ssa.gov/oact/STATS/table4c6.html
    result = pd.read_csv(StringIO(
        """30	0.001865	97,229	47.65	0.000833	98,540	51.97
        31	0.001911	97,048	46.74	0.000887	98,458	51.01
        32	0.001960	96,862	45.83	0.000939	98,370	50.06
        33	0.002014	96,672	44.92	0.000988	98,278	49.10
        34	0.002071	96,478	44.01	0.001034	98,181	48.15
        35	0.002138	96,278	43.10	0.001085	98,079	47.20
        36	0.002211	96,072	42.19	0.001143	97,973	46.25
        37	0.002279	95,860	41.28	0.001205	97,861	45.30
        38	0.002342	95,641	40.37	0.001271	97,743	44.36
        39	0.002405	95,417	39.47	0.001345	97,619	43.41
        40	0.002482	95,188	38.56	0.001429	97,488	42.47
        41	0.002583	94,951	37.65	0.001524	97,348	41.53
        42	0.002710	94,706	36.75	0.001630	97,200	40.59
        43	0.002870	94,450	35.85	0.001748	97,042	39.66
        44	0.003064	94,178	34.95	0.001881	96,872	38.73
        45	0.003285	93,890	34.06	0.002029	96,690	37.80
        46	0.003538	93,581	33.17	0.002195	96,494	36.88
        47	0.003834	93,250	32.28	0.002386	96,282	35.96
        48	0.004178	92,893	31.41	0.002605	96,052	35.04
        49	0.004569	92,505	30.54	0.002851	95,802	34.13
        50	0.004997	92,082	29.67	0.003118	95,529	33.23
        51	0.005462	91,622	28.82	0.003403	95,231	32.33
        52	0.005971	91,122	27.98	0.003714	94,907	31.44
        53	0.006526	90,577	27.14	0.004052	94,554	30.55
        54	0.007125	89,986	26.32	0.004415	94,171	29.68
        55	0.007766	89,345	25.50	0.004813	93,755	28.81
        56	0.008445	88,651	24.70	0.005233	93,304	27.94
        57	0.009156	87,903	23.90	0.005647	92,816	27.09
        58	0.009897	87,098	23.12	0.006043	92,292	26.24
        59	0.010671	86,236	22.34	0.006441	91,734	25.39
        60	0.011519	85,316	21.58	0.006886	91,143	24.56
        61	0.012419	84,333	20.83	0.007391	90,515	23.72
        62	0.013307	83,286	20.08	0.007931	89,846	22.90
        63	0.014164	82,177	19.35	0.008508	89,134	22.07
        64	0.015032	81,013	18.62	0.009142	88,375	21.26
        65	0.016013	79,795	17.89	0.009874	87,568	20.45
        66	0.017138	78,518	17.18	0.010717	86,703	19.65
        67	0.018362	77,172	16.47	0.011660	85,774	18.86
        68	0.019693	75,755	15.77	0.012711	84,774	18.07
        69	0.021174	74,263	15.07	0.013894	83,696	17.30
        70	0.022889	72,691	14.39	0.015285	82,533	16.54
        71	0.024869	71,027	13.71	0.016878	81,272	15.79
        72	0.027095	69,261	13.05	0.018607	79,900	15.05
        73	0.029587	67,384	12.40	0.020466	78,413	14.32
        74	0.032394	65,390	11.76	0.022522	76,809	13.61
        75	0.035668	63,272	11.14	0.024929	75,079	12.92
        76	0.039396	61,015	10.53	0.027729	73,207	12.23
        77	0.043453	58,611	9.94	0.030855	71,177	11.57
        78	0.047826	56,065	9.37	0.034321	68,981	10.92
        79	0.052649	53,383	8.82	0.038211	66,613	10.29
        80	0.058206	50,573	8.28	0.042771	64,068	9.68
        81	0.064581	47,629	7.76	0.047992	61,328	9.09
        82	0.071657	44,553	7.26	0.053678	58,385	8.52
        83	0.079465	41,361	6.79	0.059810	55,251	7.98
        84	0.088141	38,074	6.33	0.066584	51,946	7.45
        85	0.097854	34,718	5.89	0.074258	48,487	6.95
        86	0.108747	31,321	5.48	0.083053	44,887	6.47
        87	0.120919	27,915	5.08	0.093123	41,159	6.01
        88	0.134425	24,539	4.71	0.104540	37,326	5.57
        89	0.149273	21,241	4.37	0.117305	33,424	5.16
        90	0.165452	18,070	4.05	0.131392	29,503	4.78
        91	0.182935	15,080	3.75	0.146753	25,627	4.43
        92	0.201679	12,322	3.48	0.163331	21,866	4.11
        93	0.221637	9,837	3.23	0.181064	18,294	3.81
        94	0.242747	7,656	3.01	0.199886	14,982	3.55
        95	0.263672	5,798	2.81	0.218908	11,987	3.31
        96	0.284014	4,269	2.64	0.237815	9,363	3.09
        97	0.303355	3,057	2.49	0.256265	7,136	2.90
        98	0.321268	2,129	2.36	0.273894	5,308	2.73
        99	0.337332	1,445	2.24	0.290328	3,854	2.58
        100	0.354198	958	2.12	0.307747	2,735	2.42
        101	0.371908	619	2.01	0.326212	1,893	2.28
        102	0.390503	388	1.90	0.345785	1,276	2.14
        103	0.410029	237	1.80	0.366532	835	2.01
        104	0.430530	140	1.70	0.388524	529	1.88
        105	0.452057	80	1.60	0.411835	323	1.76
        106	0.474659	44	1.51	0.436546	190	1.65
        107	0.498392	23	1.42	0.462738	107	1.54
        108	0.523312	11	1.34	0.490503	58	1.44
        109	0.549478	5	1.26	0.519933	29	1.34
        110	0.576951	2	1.18	0.551129	14	1.24
        111	0.605799	1	1.10	0.584196	6	1.15
        112	0.636089	0	1.03	0.619248	3	1.06
        113	0.667893	0	0.96	0.656403	1	0.98
        114	0.701288	0	0.90	0.695787	0	0.91
        115	0.736353	0	0.84	0.736353	0	0.84
        116	0.773170	0	0.78	0.773170	0	0.78
        117	0.811829	0	0.72	0.811829	0	0.72
        118	0.852420	0	0.66	0.852420	0	0.66
        119	0.895041	0	0.61	0.895041	0	0.61
        120	0.895041	0	0.61	0.895041	0	0.61
        """),
        sep='	',
        names=['age', 'p_die_male', 'n_lives_male', 'life_exp_male', 'p_die_female', 'n_lives_female',
               'life_exp_female']).set_index('age')

    result = result.assign(
        p_couple_survive=(1 - result.p_die_male * result.p_die_female)
    )
    return result


@cache
def market_data():
    # Derived from http://www.econ.yale.edu/~shiller/data/chapt26.xlsx
    result = pd.read_csv(StringIO(
        """stock_return,bond_return
        1.1410526054693393,1.0383296158130164
        1.0934649658066464,1.0332453802284614
        1.0268733472882234,1.0988205189536444
        1.1095538830763698,1.1199256608835582
        1.1074994341534476,1.1037560055368656
        0.840711514989271,1.0357262626681694
        1.1274021021365357,1.1999245290054417
        1.2604925612680618,1.1452881779418906
        1.27135499400093,0.8333000661018604
        1.3201929149508136,1.0941463370791753
        0.929627768021657,0.9553924538706725
        1.0569050234424011,1.054987481459799
        1.027609633614954,1.1123978087091533
        0.978224770059615,1.1382881779418905
        1.303206751253192,1.068183964605877
        1.1178797904604356,1.0352
        0.9473046005203697,0.9890771963529437
        1.074260026398385,1.0799579677735809
        1.1152285127833423,1.0818187622228839
        0.9200829555672376,1.0112001573245881
        1.2429626753481915,1.0969757544980467
        0.9847893830344638,0.9595772828503875
        0.9511953615747911,1.1695307745278511
        1.070168011433157,1.0762658327839196
        1.0323684093997099,1.021507960302038
        1.0595156839677107,1.062571257405228
        1.1679701274997338,1.0040884166769541
        1.2661548762354091,1.016713763206936
        0.883455632397317,0.8624858308442541
        1.22837531518799,1.0550972527213216
        1.1644629770168158,1.0071077314429975
        0.9868571584347007,0.9366140788599994
        0.8799610339791105,1.0779557396033232
        1.2781385087972503,1.011816553419749
        1.2113453543755655,1.0343
        0.9696730796052744,0.9917562830068165
        0.7964221092673055,1.0602007520306442
        1.338228392743828,1.004635534104747
        1.052822741923953,0.9327129763400153
        1.037657320483439,1.107113276717065
        1.0467530233500022,1.0504026741760968
        0.9984359468385134,0.9715862015074438
        0.9297710482042278,1.021191836734694
        0.9411544924258398,1.0324
        1.2776446691387504,1.0107970297029703
        0.9728237861484342,0.9173000000000001
        0.635871698141534,0.8491188034188034
        0.9777100983241604,0.8664285714285713
        1.0129014390283515,0.8800030303030304
        0.8854511634759663,1.0664440414507772
        1.2071122549452067,1.1535263157894737
        1.284645803752847,1.0495171597633135
        1.024660582417909,1.0108380952380953
        1.2548987705172476,1.0386
        1.2155155475336425,1.0021179190751446
        1.1390975928316551,1.0557463687150839
        1.3681258324140038,1.0447285714285715
        1.4687195281232721,1.0475606936416184
        0.9184309146420323,1.0329
        0.8575559101555392,1.1035754385964913
        0.6802691437343583,1.13742893081761
        1.0141782037358702,1.1310020979020978
        1.5060395294625533,1.0079441860465117
        0.8990107839846162,0.9975969696969698
        1.5235808221525589,1.0117941176470586
        1.3020842794043175,1.0050608695652175
        0.6809796049359315,1.0185078014184399
        1.1689011295002554,1.0376845070422536
        1.0456144018583045,1.0292428571428571
        0.9106336662261915,1.005111510791367
        0.7990397492167446,0.9111248226950355
        1.113921992033963,0.9482668789808917
        1.1988527688424333,0.9952142011834318
        1.16433324845117,1.0007114942528734
        1.3527330552954857,0.9994280898876405
        0.7179702963020644,0.8411813186813186
        0.935401576670001,0.9220744186046512
        1.0972988903245218,1.0104417721518986
        1.2068769747235386,1.0440333333333334
        1.2421436002270043,0.9448489361702129
        1.1554812266351517,0.9834929133858267
        1.1338776046994234,1.0245264150943396
        1.021706933148179,1.0135218045112782
        1.451774158868491,1.0335349442379183
        1.275834319501529,1.02525468164794
        1.0385426029009368,1.0047492537313432
        0.9114552512363329,0.9946681159420289
        1.3715422790306626,1.026213986013986
        1.0665882185517532,1.0368551724137929
        1.0458825354664902,1.0213351535836177
        1.180690835780615,1.034088590604027
        0.9636541973268529,1.0249666666666668
        1.1913229103395904,1.0252526315789474
        1.1483629992317417,1.0321912621359224
        1.0951278973613063,1.0268692307692306
        0.9049361848626685,1.0112088050314467
        1.1212276691786631,1.0188258358662612
        1.0606331766044594,1.0164117302052786
        0.8580164561088461,1.0161022471910115
        1.015139731138589,1.009489947089947
        1.102761399728742,1.0268366834170854
        1.1384159222767716,1.0281036496350364
        0.7551631366160502,0.9760032863849766
        0.6876591627471893,0.9569742489270385
        1.309529682089235,1.0102214971209211
        1.0645808044257419,1.0199417266187052
        0.8571779629207207,1.0112239316239318
        1.068684271145324,0.9982
        1.0283929075977496,0.9689077598828698
        1.130941494489616,1.0074480719794343
        0.8566731760692994,1.0619919540229885
        1.2421613926341653,1.0674844114528101
        1.156656462422632,1.074777709611452
        1.0420779373363382,1.0784712463199215
        1.2140665448461918,1.053037440758294
        1.289230448377545,1.0562014598540146
        0.9454161646826336,1.0462323741007193
        1.1315310930845395,1.0442275713050995
        1.1747024291847694,1.0300768786127168
        0.9384033060622577,1.0243850863422292
        1.2820545254459401,1.044297028231798
        1.0423439771685374,1.0334149167270095
        1.08935742394455,1.0322545582047686
        0.9852322205311767,1.0497562243502052
        1.3175950576921251,1.0292212242182301
        1.2368510325993964,1.0353595854922282
        1.2583917849518724,1.0396866121935888
        1.2929223858066277,1.0304920792079206
        1.1256192256544726,1.0392110772976262
        0.9113587285547564,1.0142777251184836
        0.8563588745392695,1.0389779554540264
        0.7791177534965588,1.014525974025974
        1.262101703236979,1.0222374793615852
        1.0322796258319167,1.0125023758099352
        1.0619797760366465,1.0043468274777136
        1.1124447262008001,1.0268435703479577
        0.9454155525993652,0.9941030274286619
        0.6538613511640977,1.025375205985415
        1.2920389293900847,1.011042913570424
        1.145835343845228,1.0175815314255123
        1.008778162799445,0.9904478328784915
        1.1459482483083103,1.0031513533187744
        1.2368444162737908,1.0128105263157894
        """))
    return result

@cache
def male_survival():
    return {idx: 1 - r.p_die_male for idx, r in actuarial_data().iterrows()}

@cache
def female_survival():
    return {idx: 1 - r.p_die_female for idx, r in actuarial_data().iterrows()}